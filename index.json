[{"content":"Childhood and music I used to play piano as a child, but I had difficult learning it to the point I had to use color-coded notes. Later on, around the 7th grade, I picked up the classical guitar, but due to lack of interest by myself and a not so meaningful selection of songs to learn from my teacher and what not, I ended up dropping those instruments (I also envied my brother who had an electric guitar lol).\nThese instruments felt quite complicated to me, like I had to learn a decent amount of musical concepts and theory to be able to do something with them. The guitar in specific, I was able to play quite a few songs, but I also had problems with my hands getting hurt or tired quickly.\nSo at one point, near the end of my time with the guitar, I even asked my teacher to have him teach me drums, initially just out of curiosity, but I was very eager to like it and have it replace the guitar as my instrument of choice.\nEventually I stopped having classes altogether (it was a messy time) and since then I hadn\u0026rsquo;t touched any instruments again.\nE-drums Since high school, and especially since the start of my time at university (which is when I made a lastfm account lol) I have been more and more into music as a whole, and have made friends with people that are also really into music and play some instruments. Eventually, around Aug 2024, due to peer pressure, exposure to youtube shorts and instagram reels, I got interested in acquiring e-drums.\nSo let\u0026rsquo;s go through their positive and negative aspects.\nPositive aspects\u0026hellip;\nE-drums are feature-rich You can connect them directly to a computer with a USB-B cable, which allows you to record your playing and change the drum sounds completely. Traditional drums can also be made into MIDI players through additional equipment, but that surely becomes more expensive. This proved quite interesting to me (in my reels exposure arc) because it meant I could use them to play Clone Hero and YARG, which are free rhythm game clones of Guitar Hero and Rock Band, respectively.\nE-drums are great for apartments I live in an apartment with quite thin (or not very dense) walls, which is a real problem to me not only because I have neighbors in front and below me, but also because I live with 2 people that are quite easily irritable to noise. Not only that, but my apartment, while relatively large, is by no means a residence with loads of space to spare, and usually traditional drums take a decent amount of space. Taking into account my living situation, e-drums fair much better because they\u0026rsquo;re often targeted at beginners, so children or teenagers, meaning they are smaller, but they also don\u0026rsquo;t produce the actual sound of the cymbals and pads. For that, you either hook them up to external speakers or use headphones. Take into account that this doesn\u0026rsquo;t mean e-drums are perfectly silent. When playing them, you\u0026rsquo;re essentially hitting wood (stick) into rubber (cymbals) or fabric mesh (pads). The meshes are, largely, fairly silent but the rubber is definitely audible. The pedals can also make a decent amount of noise, especially if you\u0026rsquo;re a newbie like myself who doesn\u0026rsquo;t have great feet placement or force control.\nE-drums are fairly accessible! I got really excited to know that a lot of e-drums are actually marketed towards beginners and offered at accessible prices. This is especially true if you browse the second-hand market. In my limited market experience, I was able to find several models, even some fairly expensive ones, at half or a quarter of their original price.\nFor the negatives\u0026hellip;\nMore to think of Drums are cool to me because there\u0026rsquo;s less to think about, at least initially, it\u0026rsquo;s just like, hit the thing at the right beat. But having to setup software, patches, fixes, cables, and having to consider model limitations and features, etc., makes it all a bit more complicated. There\u0026rsquo;s more that I could add to the negatives, but that\u0026rsquo;s the main idea (It\u0026rsquo;s also getting quite late as of writing).\nAlesis Turbo Mesh Review The kit I ended up buying was the Alesis Turbo Mesh. It comes with a snare, hi-hat, 3 toms, a crash, ride and the kick and hi-hat pedals. I got it second-hand for about 100 euros and I only had to drive about 10 minutes to get to the seller.\nRegarding my specific e-drum kit, it definitely does not feel like it\u0026rsquo;s worth more than what I paid for in terms of features and quality, but it is perhaps precisely the right one for a beginner like myself.\nMy gripes with it are:\nYou can\u0026rsquo;t pinch the cymbals to cut off the sound like you can in more expensive models; The pads have a large raised plastic rim around them, but that serves no actual purpose (it doesn\u0026rsquo;t play a different rim sound). This rim is can become frustrating to deal with because it\u0026rsquo;s very easy to hit by mistake, making a very loud noise; All the cables from the various instruments are grouped into a single cable that connects to the drum module and, if damaged, needs to be replaced as a whole; The pedals are simple and limited, causing some miss triggers and dead notes. It\u0026rsquo;s also a shame not being able to use double pedals; The drum module is severely limited. It does not offer the ability to change the sensitivity of any of the pads or cymbals, does not offer the ability to change the volume per pads and cymbals (only master volume knob), has a small selection of drum-kit sounds and would probably be refuse to work in combination with additional pads. Linux/NixOS fixes However, most of these are constraints that can be expected considering the price. But there is one problem that I do not dismiss as reasonable cost-cutting. For whatever reason, the closed hi-hat MIDI note produced by the module is the same as the open hi-hat. Fortunately, there is a mididings script made by a fellow Linux user that solves this, and in Windows it appears you can easily solve this with EZdrummer.\nI uploaded my flake development shell and nix configuration for getting the audio working to Github. The flake includes Hydrogen, the drum sequencer software for actually making sense of the MIDI notes and all that, and several libraries and dependencies for mididings, the python package for remapping MIDI notes. Additionaly, specifically in NixOS, JACK clients are not working with Pipewire by default, so this flake also fixes that. To run mididings, I use a python virtual environment.\nI do not have previous advanced experience with audio in Linux, despite having some bad headaches with a laptop before, and ever since Pipewire became a thing, it\u0026rsquo;s mostly been smooth sailing. But this means I do NOT understand how stuff like JACK work, so even though there have been people doing almost exactly what I was trying to do, this was all still quite frustrating (especially with the added complications trying to run mididings).\nIf you use this flake however, you should be able to run the shell script mentioned before without issues. The only additional changes I made to the script were removing the Hydrogen song provided, perhaps commenting out the reverb changes, and commenting out the renice (because it requires sudo and that was proving to be a headache).\nAfter running the script, also configure Hydrogen to \u0026ldquo;Ignore note-off\u0026rdquo; and use MIDI Output as MIDI Input/Note (?), and change the MIDI System\u0026rsquo;s MIDI ports to mididings\u0026rsquo; own ports. You can use QJackctl to verify in the graph that the connections are correct (the drums should be connected to mididings, which is in turn connected to Hydrogen).\nOpening up the pedals by taking a few screws out allows us to remove any dust and clean them a little bit, which reduces the miss triggers and dead notes. I also followed a guide, made by the same guy that provided the mentioned scripts, to dampen the noise made by the pedals.\nAs of now, I feel relatively happy with my setup. I\u0026rsquo;m still considering whether or not I should purchase a subscription for Songsterr to isolate each instrument, but overall I don\u0026rsquo;t have complaints.\nThat basically wraps it up. I just felt like ranting about my experience and opinions regarding my drumming experience and my little scripts for fixing my kit\u0026rsquo;s problems and so on. I plan to continue drumming regularly for the foreseeable future, so I might even make a follow up post.\n","permalink":"https://moniz.pt/posts/alesis-turbo-mesh/","summary":"\u003ch2 id=\"childhood-and-music\"\u003eChildhood and music\u003c/h2\u003e\n\u003cp\u003eI used to play piano as a child, but\nI had difficult learning it to the point I had to use color-coded notes. Later on, around the 7th grade, I picked up the classical guitar, but due to lack of interest by myself\nand a not so meaningful selection of songs to learn from my teacher and what not,\nI ended up dropping those instruments (I also envied my brother who had an electric\nguitar lol).\u003c/p\u003e","title":"Alesis Turbo Mesh"},{"content":"Hello, here are the steps I had to take to get single GPU passthrough working on Arch Linux with QEMU and an AMD GPU (specifically, a PowerColor Red Devil 5700XT 8GB), the problems i had to face and the solutions I found to said problems.\nBut first, why? Well, dual-booting Windows has always been a bummer to me. Sure, it works wonders in terms of performance for gaming, but having to reboot the computer and dedicating a specific amount of space for it always rubbed me the wrong way. With that being said, I\u0026rsquo;m no expert, there\u0026rsquo;s plenty of other reasons for using a VM instead of dual-booting, lots that I probably forgot and lots that I just don\u0026rsquo;t know about.\nSupported Devices Vendor Family Common Name(s) AMD Polaris 10 RX 470, 480, 570, 580, 590 AMD Polaris 11 RX 460, 560 AMD Polaris 12 RX 540, 550 AMD Vega 10 Vega 56/64/FE AMD Vega 20 Radeon VII AMD Navi 10 5600XT, 5700, 5700XT AMD Navi 12 Pro 5600M AMD Navi 14 Pro 5300, RX 5300, 5500XT \u0026hellip; \u0026hellip; \u0026hellip; Note that this list isn\u0026rsquo;t comprehensive, it merely contains the AMD GPUs that suffer from the same problems I faced[^1] and are certain work with steps I provide, even ones from NVIDIA are likely to work, read this similar guide.\nBefore begining make sure your machine has virtualization capabilities and that they\u0026rsquo;re activated. You can go to your BIOS and check it there.\n(please note this was done on 5.18.7-arch1-1)\nPackages To follow this guide you should get the following packages,\nName Description Repository virt-manager(GUI), libvirt Front-end for libvirt APKG qemu-full System Emulation APKG dnsmasq, bridge-utils, openbsd-netcat, vde2 Networking APKG libguestfs Filesystem access, management APKG dkms Dynamic module manager APKG Editing Grub Edit the file /etc/default/grub.\nsudo nano /etc/default/grub AMD CPUs Find the line GRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;quiet splash\u0026quot; and Change it to\nGRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;amd_iommu=on iommu=pt iommu=1 video=efifb:off quiet splash\u0026#34; Intel CPUs Find the line GRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;quiet splash\u0026quot; and Change it to\nGRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;intel_iommu=on iommu=pt iommu=1 video=efifb:off quiet splash\u0026#34; Then update grub and reboot.\nsudo grub-mkconfig -o /boot/grub/grub.cfg ; sudo reboot Once rebooted, check that the grub loader loaded the paramaters.\nsudo cat /proc/cmdline It should look similar to:\nBOOT_IMAGE=/boot/vmlinuz-5.4.0-60-generic root=UUID=0587b30a-06cf-4df2-82fe-fb8db547e1c5 ro amd_iommu=on iommu=pt iommu=1 video=efifb:off quiet splash vt.handoff=1 Installing Virt-Manager and QEMU First, make sure your system is up-to-date.\nparu # Or any equivalent command Run the following command to get the virtualizer and other useful packages installed:\nsudo pacman -S qemu virt-manager dnsmasq vde2 bridge-utils openbsd-netcat libguestfs Start and enable libvirtd, in my case, with systemctl.\nsudo systemctl start libvirtd sudo systemctl enable libvirtd Edit the libvirtd configuration file.\nsudo nvim /etc/libvirt/libvirtd.conf Verify the following values: unix_sock_group = \u0026quot;libvirt\u0026quot; unix_sock_ro_perms = \u0026quot;0777\u0026quot; unix_sock_rw_perms = \u0026quot;0770\u0026quot; Add the current user to the libvirt group.\nsudo usermod -aG libvirt \u0026lt;username\u0026gt; Edit the qemu configuration file.\nsudo nvim /etc/libvirt/qemu.conf Verify the following values: user = \u0026quot;\u0026lt;username\u0026gt;\u0026quot; group = \u0026quot;\u0026lt;username\u0026gt;\u0026quot; Add the current user to the kvm group.\nsudo usermod -aG kvm \u0026lt;username\u0026gt; Restart the libvirtd service.\nsudo systemctl restart libvirtd Getting the GPU bios Next, find out the PCI address of your GPU and it\u0026rsquo;s audio companion with,\nlspci -nnk There should be a VGA compatible entry (...) \u0026lt;name_of_your_card\u0026gt; and Audio Device (...) entries, only differing in the last digit. Save the addresses for later.\nNow go to this website and find the bios for your GPU. Make sure to select the exact GPU you have and not a slightly different version. Create the following directory,\n/var/lib/libvirt/vgabios/ And save the bios file here with a simple name such as 5700xt_rd.rom. Make yourself the owner of the file and change the permissions to read and execute at least for all types of users.\nsudo chown \u0026lt;user\u0026gt;:\u0026lt;user\u0026gt; \u0026lt;name_of_rom\u0026gt; ; sudo chmod -R 775 \u0026lt;name_of_rom\u0026gt; Setting up the VM Open Virt Manager, click \u0026ldquo;create a new machine\u0026rdquo; (I\u0026rsquo;ll be doing a Windows 10 Guest) and proceed.\nBrowse your filesystem and select the image file for the guest, make sure Virt Manager indentifies the OS correctly (it should have automatic detection enabled by default) or otherwise, select one from the list yourself.\nSelect the amount of memory and cores you want to give to the system and the amount of storage space.\nTick \u0026ldquo;Customize configuration before install\u0026rdquo;.\nSelect Q35 as the Chipset and (...)x64/OVMF_CODE.fd as the firmware.\nClick on the XML option tab above, find and remove \u0026lt;timer name=\u0026quot;rtc\u0026quot; (...) and \u0026lt;timer name=\u0026quot;pit\u0026quot; (...) just below it and change \u0026lt;timer name=\u0026quot;hpet\u0026quot; present=\u0026quot;no\u0026quot;\u0026gt; to \u0026quot;yes\u0026quot;, this should prevent some unwanted performance loss.\nMove to the CPUs panel, tick \u0026ldquo;Manually set CPU Topology\u0026rdquo; and make sure the # of sockets is less or equal to the number of physical cores on your CPU, then adjust the rest to match your needs.\nIn the image the box is unticked and # of sockets is wrong, as I only have a single gpu\u0026hellip;\nApply the settings and begin installation.\nOnce your guest system is installed, close it and re-open the settings page by selecting the machine, clicking Open, and selecting Show virtual hardware settings.\nRight-click and remove the following items(* = necessary removal):\nSATA CDROM: the disc image just used for installing the system, no longer necessary Tablet: keep it if you want, but probably not going to need it Display Spice* Sound ich9 Console Channel Spice* Video QXL* USB Redirectors* If you have trouble removing the ones marked with an extra symbol or any others because of Spice etc etc, do the following sudo virsh edit \u0026lt;name_of_machine\u0026gt;, in my case sudo virsh edit win10, then find all \u0026ldquo;spice\u0026rdquo; entries and remove them.\nExample of entries to remove\u0026hellip;\nClick \u0026ldquo;Add Hardware\u0026rdquo;, select \u0026ldquo;PCI Host Device\u0026rdquo; and add your GPU and audio companion with the addresses saved from earlier.\nClick \u0026ldquo;Add Hardware\u0026rdquo; again and add \u0026ldquo;USB Host Device\u0026rdquo; for your Keyboard, Mouse and other peripherals.\nAdding USB Entries and then disconnecting the devices won\u0026rsquo;t allow the machine to start unless you add the specific flag. Also, unplugging devices after the machines has already booted and then reinserting them won\u0026rsquo;t work, you will need to restart the machine to use them again.\nAll these issues are fixed by using USB Redirection, which requires Spice, which we cannot use for single gpu passthrough\u0026hellip;\nSelect the PCI Entry added for your GPU and click the XML tab, add the following between the \u0026lt;/source\u0026gt; and \u0026lt;address (...)\u0026gt; lines.\n\u0026lt;rom file=\u0026#34;/var/lib/libvirt/vgabios/\u0026lt;name_of_rom\u0026gt;\u0026#34;/\u0026gt; Installing scripts Now, let\u0026rsquo;s install the scripts to realize the transition between Host and Guest Machines.\nClone this repository, get execute permissions with chmod +x install_hooks.sh and run the script.\nEdit hooks/qemu by replacing \u0026ldquo;win10\u0026rdquo; with the name of your VM\nOPERATION=\u0026#34;$2\u0026#34; if [[ $OBJECT == \u0026#34;win10\u0026#34; ]]; then case \u0026#34;$OPERATION\u0026#34; in Now save everything and try running the VM, if everything loads normally, Great! Although, try shutting down afterwards\u0026hellip; If you\u0026rsquo;re stuck with a black-screen and your GPU is one of the listed initially, then your card probably has the Reset Bug, which user gnif has provided a fix for.\nvendor-reset fix The only downside to this fix is that it has been a long time since it has been updated (at the time of writing), so it doesn\u0026rsquo;t work as properly as it did back when it came out, so I had to do some more digging. Since this is all open-source, the community has found a minor fix to overcome the problems brought with the newer linux kernels.\nAnyway, either install vendor-reset with an AUR helper or clone the repository and install the patch with sudo dkms install ., now vendor-reset should be added as an out-of-tree kernel module. If the command fails it probably means you\u0026rsquo;re lacking linux-headers to build the module (remove the module with sudo dkms remove vendor-reset and after installing the headers, try again).\nCreate and edit the following file to make systemd automatically load the module at boot time /etc/modules-load.d/vendor-reset.conf,\nvendor-reset Edit /etc/libvirt/hooks/qemu to add the following line at the beggining of \u0026ldquo;prepare\u0026rdquo; and end of \u0026ldquo;release\u0026rdquo;.\necho \u0026#39;device_specific\u0026#39; \u0026gt; /sys/bus/pci/devices/0000:09:00.0/reset_method Reboot your PC and test the results!\nBugs, crashes, etc. If you still find yourself getting errors, then try enabling libvirt logs. /etc/libvirt/libvirtd.conf\nlog_filters=\u0026#34;1:qemu\u0026#34; log_outputs=\u0026#34;1:file:/var/log/libvirt/libvirtd.log\u0026#34; Credits, Links, etc. Single GPU Passthrough Scripts Single GPU Passthrough in Ubuntu AMD CPU/GPU A somewhat pretty complete video format of this guide QEMU/Virt Manager Introduction The virtio might not be necessary (unsure) Sharing files between Host and Guest Machines KVM-GPU-Passthrough Guide AMD GPUs don\u0026rsquo;t require patching VGABIOS Database Forums, More forums, YAF, YAFF Arch Linux Forums Arch Linux Wiki (mkinitcpio), Virt Manager Libvirt Wiki (hooks) vendor-reset, gnif talks vendor-reset ","permalink":"https://moniz.pt/posts/single-gpu-passthrough/","summary":"\u003cp\u003eHello, here are the steps I had to take to get single GPU\npassthrough working on Arch Linux with QEMU and an AMD GPU\n(specifically, a PowerColor Red Devil 5700XT 8GB), the problems i had to face and\nthe solutions I found to said problems.\u003c/p\u003e\n\u003cp\u003eBut first, why? Well, dual-booting Windows has always been a bummer to me.\nSure, it works wonders in terms of performance for gaming, but having to reboot\nthe computer and dedicating a specific amount of space for it always rubbed me the wrong way.\nWith that being said, I\u0026rsquo;m no expert, there\u0026rsquo;s plenty of other reasons for using\na VM instead of dual-booting, lots that I probably forgot and lots that I just\ndon\u0026rsquo;t know about.\u003c/p\u003e","title":"Single GPU Passthrough on linux with AMD"}]